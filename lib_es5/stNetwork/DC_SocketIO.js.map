{"version":3,"sources":["stNetwork/DC_SocketIO.js"],"names":[],"mappings":"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","file":"stNetwork/DC_SocketIO.js","sourcesContent":["\"use strict\";\r\n\r\n\r\nlet EventEmitter = require('events').EventEmitter;\r\nlet DataChannel = require('./DataChannel.js').DataChannel;\r\n\r\n\r\n/**\r\n * Data Channel for Socket.io type\r\n */\r\nclass DC_SocketIO extends DataChannel {\r\n\t\r\n\tconstructor(config) {\r\n\t\tsuper(config);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize data channel\r\n\t */\r\n\tinitDataChannel() {\r\n\t\tsuper.initDataChannel();\r\n\t\t\r\n\t\tswitch ( this.config.mode ) {\r\n\t\tcase this.CONSTANTS.Config.modeIN:\r\n\t\t\tthis.initDC_modeIN();\r\n\t\t\tbreak;\r\n\t\tcase this.CONSTANTS.Config.modeOUT:\r\n\t\t\tthis.initDC_modeOUT();\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize mode IN\r\n\t */\r\n\tinitDC_modeIN() {\r\n\t\t\r\n\t\tif (this.server != null) {\r\n\t\t\t throw \"Server is initialized\";\r\n\t\t}\r\n\t\t\r\n\t\tlet dataChannel = this;\r\n\t\t\r\n\t\t// Map event: Channel stop\r\n\t\tdataChannel.eventEmitter.on( dataChannel.CONSTANTS.Events.ChannelStop, function() {\n\t\t\tdataChannel.server.close();\r\n\t\t\tdataChannel.state = dataChannel.CONSTANTS.States.DCstate_Stop;\r\n\t\t\tdataChannel.eventEmitter.emit( dataChannel.CONSTANTS.Events.ChannelStopped );\r\n\t\t});\r\n\r\n\t\t// Map event: Channel start\r\n\t\tdataChannel.eventEmitter.on( dataChannel.CONSTANTS.Events.ChannelStart, function() {\r\n\t\t\tdataChannel.server.listen( this.config.socketPort );\t// listen on Socket port\r\n\t\t\tdataChannel.eventEmitter.emit( dataChannel.CONSTANTS.Events.ChannelStarted );\r\n\t\t});\r\n\r\n\t\tthis.server = require('socket.io')();\r\n\t\t\r\n\t\tthis.server.on('connection', function(socket){\t// Map connection of Socket\r\n\t\t\t\r\n\t\t\tdataChannel.eventEmitter.emit( dataChannel.CONSTANTS.Events.ClientConnected , {\"socket\" : socket} );\r\n\t\t\t  \r\n\t\t\t  socket.on('disconnect', function(){\t// Map disconnection of Socket\r\n\t\t\t\t  dataChannel.eventEmitter.emit( dataChannel.CONSTANTS.Events.ClientDisconnected , {\"socket\" : socket} );\r\n\r\n\t\t\t  });\r\n\t\t\t  \r\n\t\t\t  socket.on( dataChannel.CONSTANTS.Messages.DataMessage , function(msg){\t// Map message of Socket\r\n\t\t\t\t  dataChannel.eventEmitter.emit( dataChannel.CONSTANTS.Events.MessageReceived , msg );\r\n\r\n\t\t\t  });\r\n\t\t\t  \r\n\t\t\t});\r\n\r\n\r\n\t\tdataChannel.eventEmitter.emit( dataChannel.CONSTANTS.Events.ChannelInitialized );\t// Emit event: Channel initialized\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize mode OUT\r\n\t */\r\n\tinitDC_modeOUT() {\r\n\t\tif (this.socket != null) {\r\n\t\t\t throw \"Socket is initialized\";\r\n\t\t}\r\n\t\t\r\n\t\tlet dataChannel = this;\r\n\t\tdataChannel._serverURL = 'http://' + dataChannel.config.netLocation + ':' + dataChannel.config.socketPort;\r\n\r\n\t\t\r\n\t\t// Map event: Channel start\r\n\t\tdataChannel.eventEmitter.on( dataChannel.CONSTANTS.Events.ChannelStart, function() {\r\n\r\n\t\t\tddataChannel.socket = require('socket.io-client')(dataChannel._serverURL);\t// connect to server\r\n\t\t\t\r\n\t\t\tddataChannel.socket.on('connect', function(){\t// Map connection to Server\r\n\t\t\t\tdataChannel.eventEmitter.emit( dataChannel.CONSTANTS.Events.ChannelStarted );\r\n\t\t\t\t  \r\n\t\t\t});\r\n\r\n\t\t\tddataChannel.socket.on('disconnect', function(){\t// Map disconnection from Server\r\n\t\t\t\tdataChannel.eventEmitter.emit( dataChannel.CONSTANTS.Events.ChannelStop );\r\n\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\tddataChannel.eventEmitter.on( dataChannel.CONSTANTS.Events.MainLoop_Tick, function() {\t// Map main loop tick\r\n\t\t\tdataChannel.socket.emit(dataChannel.CONSTANTS.Messages.DataMessage , dataChannel.messagesList);\r\n\t\t\tdataChannel.messagesList = [];\r\n\t\t});\r\n\t\t\r\n\t\tthis.state = this.CONSTANTS.States.DCstate_Ready;\t// Change state to Ready\r\n\t\tthis.eventEmitter.emit( this.CONSTANTS.Events.ChannelInitialized );\t// Emit event: Channel initialized\r\n\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nmodule.exports = DC_SocketIO;"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STServer\\es6"}