{"version":3,"sources":["serverEngine/NodesNetService.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAcA,IAAI,eAAe,QAAQ,QAAR,EAAkB,YAArC;;;;;AAOA,IAAM,4BAA4B;;AAEjC,aAAa;AACZ,gBAAe,cADH;AAEZ,aAAY,UAFA;;AAKZ,uBAAsB,WALV;AAMZ,wBAAuB,YANX;AAOZ,uBAAsB,WAPV;AAQZ,wBAAuB,YARX;;AAUZ,2BAA0B,gBAVd;AAWZ,wBAAuB,YAXX;AAYZ,kBAAiB,gBAZL;AAaZ,sBAAqB;;AAbT,EAFoB;;AAoBjC,WAAW;AACV,wBAAuB;;AADb;AApBsB,CAAlC;;;;;;IA+BM,e;AAEL,0BAAY,YAAZ,EAA0B,eAA1B,EAA2C;AAAA;;AAE1C,OAAK,YAAL,GAAoB,YAApB;AACA,OAAK,eAAL,GAAuB,eAAvB;;AAEA,OAAK,SAAL,GAAiB,yBAAjB;AAEA;;;;+BAGY;;AAEZ,QAAK,iBAAL;AAEA;;;;;;;;sCAMmB;;AAEnB,OAAI,QAAQ,IAAZ;AACA,OAAI,QAAQ,MAAM,eAAlB;AACA,OAAI,OAAO,MAAM,YAAjB;;;AAIA,QAAK,YAAL,CAAkB,EAAlB,CAAqB,KAAK,SAAL,CAAe,MAAf,CAAsB,SAA3C,EAAsD,UAAS,IAAT,EAAe;AACpE,UAAM,OAAN,CAAc,KAAK,IAAnB;AAEA,IAHD;;;AAMA,SAAM,YAAN,CAAmB,EAAnB,CAAsB,MAAM,SAAN,CAAgB,MAAhB,CAAuB,gBAA7C,EAA+D,UAAS,SAAT,EAAoB;;AAElF,QAAI,gBAAgB,MAAM,kBAAN,CAAyB,SAAzB,CAApB;AACA,QAAI,MAAM,cAAc,WAAxB;AACA,QAAI,OAAO,IAAI,MAAJ,CAAW,KAAtB;;AAEA,QAAI,IAAI,MAAJ,CAAW,QAAf,EAAyB;;;AAExB,SAAI,MAAJ,CAAW,QAAX,GAAsB,IAAtB;AACA,UAAK,MAAL,CAAY,IAAZ,CAAiB,MAAM,SAAN,CAAgB,QAAhB,CAAyB,qBAA1C,EAAiE,EAAC,aAAa,IAAI,MAAJ,CAAW,MAAzB,EAAjE,E;AAEA,KALD,MAKO;;AAEN,UAAI,UAAU;AACZ,oBAAc,IAAI,MAAJ,CAAW,MADb;AAEZ,eAAS,IAAI,MAAJ,CAAW,IAFR;AAGZ,qBAAe,IAAI,MAAJ,CAAW,UAHd;AAIZ,sBAAgB,IAAI,MAAJ,CAAW;AAJf,OAAd;;AAOA,WAAK,MAAL,CAAY,IAAZ,CAAiB,MAAM,SAAN,CAAgB,QAAhB,CAAyB,iBAA1C,EAA6D,OAA7D,E;;AAEA,cAAQ,GAAR,CAAY,0CAAZ,E;AACA,cAAQ,GAAR,CAAY,OAAZ,E;AAEA;;AAED,YAAQ,GAAR,CAAY,yCAAZ,E;AACA,IA5BD;;;AAgCA,SAAM,YAAN,CAAmB,EAAnB,CAAsB,MAAM,SAAN,CAAgB,MAAhB,CAAuB,kBAA7C,EAAiE,UAAS,SAAT,EAAoB;;AAEpF,YAAQ,GAAR,CAAY,2CAAZ,E;AACA,YAAQ,GAAR,CAAY,qBAAqB,SAAjC,E;AAEA,IALD;;;AASA,SAAM,YAAN,CAAmB,EAAnB,CAAsB,MAAM,SAAN,CAAgB,MAAhB,CAAuB,cAA7C,EAA6D,UAAS,IAAT,EAAe;;AAE3E,UAAM,eAAN,CAAuB,EAAE,MAAO,KAAK,SAAd,EAAvB,EAAkD,KAAK,IAAvD;;AAEA,YAAQ,GAAR,CAAY,uCAAZ,E;AACA,YAAQ,GAAR,CAAY,kBAAkB,KAAK,IAAL,CAAU,MAAV,CAAiB,MAA/C,E;AACA,YAAQ,GAAR,CAAY,qBAAqB,KAAK,SAAtC,E;AAEA,IARD;;;AAYA,SAAM,YAAN,CAAmB,EAAnB,CAAsB,MAAM,SAAN,CAAgB,MAAhB,CAAuB,kBAA7C,EAAiE,UAAS,IAAT,EAAe;;AAE/E,UAAM,yBAAN,CAAgC,IAAhC;;AAEA,YAAQ,GAAR,CAAY,2CAAZ,E;AACA,YAAQ,GAAR,CAAY,kBAAkB,KAAK,IAAL,CAAU,MAAV,CAAiB,MAA/C,E;AACA,YAAQ,GAAR,CAAY,qBAAqB,KAAK,SAAtC,E;AACA,YAAQ,GAAR,CAAY,mBAAmB,KAAK,OAApC,E;AAEA,IATD;AAWA;;;;;;;;0BAMO,I,EAAM;;AAEb,OAAI,QAAQ,IAAZ;AACA,OAAI,QAAQ,MAAM,eAAlB;AACA,OAAI,OAAO,MAAM,YAAjB;;AAGA,WAAQ,GAAR,CAAY,gCAAZ,E;;AAGA,OAAI,aAAa,KAAK,WAAL,CAAiB,KAAK,MAAL,CAAY,MAA7B,CAAjB;AACA,OAAI,WAAW,MAAX,IAAqB,IAAzB,EAA+B;AAC9B,UAAM,iBAAN;AACA;;AAED,OAAI,SAAS,WAAW,MAAxB;;AAGA,OAAI,OAAO,MAAP,CAAc,gBAAd,IACF,OAAO,MAAP,CAAc,gBAAd,CAA+B,MADjC,EACyC;AACxC,UAAM,uBAAN;AACA;;AAED,QAAK,mBAAL,CAAyB,MAAzB;;AAGA,OAAI,CAAC,OAAO,MAAP,CAAc,gBAAnB,EAAqC;AACpC,WAAO,MAAP,CAAc,gBAAd,GAAiC;AAChC,eAAW;AADqB,KAAjC;AAGA;;AAED,UAAO,MAAP,CAAc,IAAd,CAAmB,MAAM,SAAN,CAAgB,QAAhB,CAAyB,UAA5C,E;;AAGA,WAAQ,GAAR,CAAY,gCAAZ,E;AACA,WAAQ,GAAR,CAAY,mCAAZ,E;AAEA;;;;;;;;sCAMmB,I,EAAM,M,EAAQ;;AAEjC,OAAI,QAAQ,IAAZ;AACA,OAAI,QAAQ,IAAZ;;AAEA,OAAI,UAAU,SAAd,EAAyB;AACxB,aAAS,KAAK,MAAd;AACA;;AAED,WAAQ,GAAR,CAAY,4CAAZ,E;;;AAIA,UAAO,EAAP,CAAU,YAAV,EAAwB,YAAU;AACjC,WAAO,kBAAP,CAA0B,MAAM,SAAN,CAAgB,QAAhB,CAAyB,UAAnD;AACA,WAAO,kBAAP,CAA0B,MAAM,SAAN,CAAgB,QAAhB,CAAyB,OAAnD;AACA,WAAO,kBAAP,CAA0B,MAAM,SAAN,CAAgB,QAAhB,CAAyB,kBAAnD;AACA,WAAO,kBAAP,CAA0B,MAAM,SAAN,CAAgB,QAAhB,CAAyB,kBAAnD;AACA,WAAO,kBAAP,CAA0B,MAAM,SAAN,CAAgB,QAAhB,CAAyB,kBAAnD;AACA,WAAO,kBAAP,CAA0B,MAAM,SAAN,CAAgB,QAAhB,CAAyB,gBAAnD;;AAEA,UAAM,MAAN,CAAa,gBAAb,CAA8B,MAA9B,GAAuC,KAAvC,C;AAEE,IAVH;;;AAaA,UAAO,EAAP,CAAU,MAAM,SAAN,CAAgB,QAAhB,CAAyB,UAAnC,EAA+C,UAAS,GAAT,EAAa;AAC3D,UAAM,eAAN,CAAsB,GAAtB,EAA2B,MAA3B,EAAmC;AAClC,aAAS,MAAM,MAAN,CAAa,MADY;AAElC,eAAW;AAFuB,KAAnC;AAIE,IALH;;;AAQA,UAAO,EAAP,CAAU,MAAM,SAAN,CAAgB,QAAhB,CAAyB,OAAnC,EAA4C,UAAS,GAAT,EAAa;AACxD,UAAM,YAAN,CAAmB,GAAnB,EAAwB,MAAxB,EAAgC;AAC/B,aAAS,KADsB;AAE/B,eAAW;AAFoB,KAAhC;AAIE,IALH;;;AASA,UAAO,EAAP,CAAU,MAAM,SAAN,CAAgB,QAAhB,CAAyB,kBAAnC,EAAuD,UAAS,GAAT,EAAa;;AAEnE,QAAI;AACH,WAAM,uBAAN,CAA8B,GAA9B,EAAmC,MAAnC,EAA2C;AAC1C,cAAS,KADiC;AAE1C,gBAAW,MAAM,MAAN,CAAa,MAFkB;AAG1C,mBAAc,IAAI;AAHwB,MAA3C;AAKA,KAND,CAME,OAAO,CAAP,EAAU;;AAEX,aAAQ,GAAR,CAAY,6CAAZ,E;AACA,aAAQ,GAAR,CAAY,CAAZ,E;AACA;AAEC,IAdH;;;AAkBA,UAAO,EAAP,CAAU,MAAM,SAAN,CAAgB,QAAhB,CAAyB,kBAAnC,EAAuD,UAAS,GAAT,EAAa;;AAEnE,QAAI;AACH,WAAM,uBAAN,CAA8B,GAA9B,EAAmC,MAAnC,EAA2C;AAC1C,cAAS,KADiC;AAE1C,gBAAW,MAAM,MAAN,CAAa,MAFkB;AAG1C,mBAAc,IAAI;AAHwB,MAA3C;AAKA,KAND,CAME,OAAO,CAAP,EAAU;;AAEX,aAAQ,GAAR,CAAY,6CAAZ,E;AACA,aAAQ,GAAR,CAAY,CAAZ,E;AACA;AAEC,IAdH;;;AAkBA,UAAO,EAAP,CAAU,MAAM,SAAN,CAAgB,QAAhB,CAAyB,kBAAnC,EAAuD,UAAS,GAAT,EAAa;;AAEnE,QAAI;AACH,WAAM,uBAAN,CAA8B,GAA9B,EAAmC,MAAnC,EAA2C;AAC1C,cAAS,KADiC;AAE1C,gBAAW,MAAM,MAAN,CAAa,MAFkB;AAG1C,mBAAc,IAAI,SAHwB;AAI1C,iBAAY,IAAI,OAJ0B;AAK1C,gBAAU;AALgC,MAA3C;AAOA,KARD,CAQE,OAAO,CAAP,EAAU;;AAEX,aAAQ,GAAR,CAAY,6CAAZ,E;AACA,aAAQ,GAAR,CAAY,CAAZ,E;AACA;AAEC,IAhBH;;;AAmBA,UAAO,EAAP,CAAU,MAAM,SAAN,CAAgB,QAAhB,CAAyB,gBAAnC,EAAqD,UAAS,GAAT,EAAa;;AAEjE,QAAI;AACH,WAAM,qBAAN,CAA4B,GAA5B,EAAiC,MAAjC,EAAyC;AACxC,cAAS,KAD+B;AAExC,gBAAW,MAAM,MAAN,CAAa,MAFgB;AAGxC,mBAAc,IAAI;AAHsB,MAAzC;AAKA,KAND,CAME,OAAO,CAAP,EAAU;;AAEX,aAAQ,GAAR,CAAY,2CAAZ,E;AACA,aAAQ,GAAR,CAAY,CAAZ,E;AACA;AAEC,IAdH;AAgBA;;;;;;;;kCAMe,G,EAAK,M,EAAQ,O,EAAQ;;AAEpC,OAAI,QAAQ,IAAZ;AACA,OAAI,UAAU,EAAd;;AAEA,WAAQ,GAAR,CAAY,wCAAZ,E;AACA,WAAQ,GAAR,CAAY,GAAZ,E;;AAGA,OAAI,WAAW,MAAM,eAAN,CAAsB,qBAAtB,CAA6C,QAAQ,IAArD,CAAf;AACA,WAAQ,eAAR,GAA0B,SAAS,eAAnC;;AAEA,OAAI,SAAS,eAAT,GAA2B,CAA/B,EAAkC;AACjC,YAAQ,YAAR,GAAuB,EAAvB;;AAEA,aAAS,YAAT,CAAsB,OAAtB,CAA8B,UAAS,GAAT,EAAc,EAAd,EAAkB;AAC/C,SAAI,cAAc;AAChB,YAAO,IAAI,MAAJ,CAAW,MADF;AAEhB,cAAS,IAAI,MAAJ,CAAW,IAFJ;AAGhB,cAAS,IAAI,MAAJ,CAAW;AAHJ,MAAlB;AAKA,aAAQ,YAAR,CAAqB,IAArB,CAA0B,WAA1B;AACA,KAPD;AAQA;;AAGD,UAAO,IAAP,CAAY,MAAM,SAAN,CAAgB,QAAhB,CAAyB,OAArC,EAA8C,OAA9C,E;AACA;;;;;;;;+BAMY,G,EAAK,M,EAAQ,O,EAAQ;;AAEjC,OAAI,QAAQ,IAAZ;AACA,OAAI,OAAO,QAAQ,IAAnB;;AAEA,WAAQ,GAAR,CAAY,qCAAZ,E;AACA,WAAQ,GAAR,CAAY,GAAZ,E;;AAGA,OAAI,CAAC,KAAK,MAAL,CAAY,gBAAZ,CAA6B,MAAlC,EAA0C;AACzC,UAAM,oBAAN,CAA2B,IAA3B,EAAiC,IAAI,YAArC,EAAmD,KAAnD;AACA,SAAK,MAAL,CAAY,gBAAZ,CAA6B,MAA7B,GAAsC,IAAtC;AACA,IAHD,MAGO;AACN,UAAM,oBAAN,CAA2B,IAA3B,EAAiC,IAAI,YAArC,EAAmD,IAAnD;AACA;AAED;;;;;;;;0CAMuB,G,EAAK,M,EAAQ,O,EAAQ;;AAE5C,OAAI,QAAQ,IAAZ;AACA,OAAI,QAAQ,MAAM,eAAlB;AACA,OAAI,SAAS,QAAQ,IAArB;;AAIA,WAAQ,GAAR,CAAY,gDAAZ,E;AACA,WAAQ,GAAR,CAAY,GAAZ,E;AACA,WAAQ,GAAR,CAAY,OAAZ,E;;;AAIA,OAAI,WAAW,MAAM,oBAAN,CAA2B,QAAQ,MAAnC,EAA2C,QAAQ,SAAnD,CAAf;AACA,OAAI,SAAS,WAAT,IAAwB,IAA5B,EAAkC;AACjC,UAAM,yBAAN;AACA;;AAED,WAAQ,GAAR,CAAY,KAAZ,E;;AAGA,OAAI,MAAM,SAAS,WAAnB;;AAEA,OAAI,IAAI,MAAJ,CAAW,SAAX,IAAwB,SAAxB,IACF,IAAI,MAAJ,CAAW,SAAX,IAAwB,MAAM,SAAN,CAAgB,MAAhB,CAAuB,cADjD,EACiE;AAChE,UAAM,yBAAN;AACA;;AAED,WAAQ,GAAR,CAAY,KAAZ,E;;AAGA,OAAI,MAAJ,CAAW,SAAX,GAAuB,IAAI,SAAJ,CAAc,MAAd,CAAqB,aAA5C;;AAEA,UAAO,MAAP,CAAc,IAAd,CAAmB,MAAM,SAAN,CAAgB,QAAhB,CAAyB,qBAA5C,EAAmE,EAAC,aAAa,QAAQ,SAAtB,EAAnE,E;AAEA;;;;;;;;0CAMuB,G,EAAK,M,EAAQ,O,EAAQ;;AAE5C,OAAI,QAAQ,IAAZ;AACA,OAAI,QAAQ,MAAM,eAAlB;;AAEA,WAAQ,GAAR,CAAY,gDAAZ,E;AACA,WAAQ,GAAR,CAAY,GAAZ,E;AACA,WAAQ,GAAR,CAAY,OAAZ,E;;AAEA,OAAI;AACH,UAAM,yBAAN,CAAgC,QAAQ,IAAxC,EAA8C,IAAI,SAAlD;AACA,IAFD,CAEE,OAAO,CAAP,EAAU;;AAEX,YAAQ,GAAR,CAAY,kDAAZ,E;AACA,YAAQ,GAAR,CAAY,CAAZ,E;AAEA;AAED;;;;;;;;0CAOuB,G,EAAK,M,EAAQ,O,EAAQ;;AAE5C,OAAI,QAAQ,IAAZ;AACA,OAAI,QAAQ,MAAM,eAAlB;AACA,OAAI,OAAO,QAAQ,IAAnB;;AAEA,WAAQ,GAAR,CAAY,gDAAZ,E;AACA,WAAQ,GAAR,CAAY,GAAZ,E;AACA,WAAQ,GAAR,CAAY,OAAZ,E;;AAEA,OAAI;;AAEH,QAAI,YAAY,MAAM,oBAAN,CAA2B,QAAQ,MAAnC,EAA2C,QAAQ,SAAnD,CAAhB;AACA,QAAI,UAAU,WAAV,IAAyB,IAA7B,EAAmC;AAClC,WAAM,yBAAN;AACA;;AAED,QAAI,MAAM,UAAU,WAApB;AACA,QAAI,aAAa,QAAQ,OAAzB;;AAEA,QAAI,MAAJ,CAAW,SAAX,GAAuB,WAAW,KAAlC;AACA,QAAI,MAAJ,CAAW,UAAX,GAAwB,WAAW,UAAnC;AACA,QAAI,MAAJ,CAAW,WAAX,GAAyB,WAAW,WAApC;AAEA,IAdD,CAcE,OAAO,CAAP,EAAU;;AAEX,YAAQ,GAAR,CAAY,kDAAZ,E;AACA,YAAQ,GAAR,CAAY,CAAZ,E;AAEA;AAED;;;;;;;;wCAMqB,G,EAAK,M,EAAQ,O,EAAQ;;AAE1C,OAAI,QAAQ,IAAZ;AACA,OAAI,QAAQ,MAAM,eAAlB;AACA,OAAI,OAAO,QAAQ,IAAnB;;AAEA,WAAQ,GAAR,CAAY,8CAAZ,E;AACA,WAAQ,GAAR,CAAY,GAAZ,E;AACA,WAAQ,GAAR,CAAY,OAAZ,E;;AAGA,OAAI;;AAEH,QAAI,YAAY,MAAM,oBAAN,CAA2B,QAAQ,MAAnC,EAA2C,QAAQ,SAAnD,CAAhB;AACA,QAAI,UAAU,WAAV,IAAyB,IAA7B,EAAmC;AAClC,WAAM,yBAAN;AACA;;AAED,QAAI,MAAM,UAAU,WAApB;AACA,QAAI,aAAa,QAAQ,OAAzB;;AAEA,QAAI,UAAU;AACZ,kBAAc,IAAI,MAAJ,CAAW;AADb,KAAd;;AAIA,SAAK,MAAL,CAAY,IAAZ,CAAiB,MAAM,SAAN,CAAgB,QAAhB,CAAyB,qBAA1C,EAAiE,OAAjE,E;AAEA,IAhBD,CAgBE,OAAO,CAAP,EAAU;;AAEX,YAAQ,GAAR,CAAY,gDAAZ,E;AACA,YAAQ,GAAR,CAAY,CAAZ,E;AAEA;AAED;;;;;;;;kCAMe,G,EAAK,I,EAAM;;AAE1B,OAAI,QAAQ,IAAZ;AACA,OAAI,QAAQ,MAAM,eAAlB;;AAEA,WAAQ,GAAR,CAAY,wCAAZ,E;;AAEA,OAAI,UAAU;AACZ,iBAAc,IAAI,MAAJ,CAAW,MADb;AAEZ,YAAS,IAAI,MAAJ,CAAW,IAFR;AAGZ,kBAAe,IAAI,MAAJ,CAAW,UAHd;AAIZ,mBAAgB,IAAI,MAAJ,CAAW;AAJf,IAAd;;AAOA,QAAK,MAAL,CAAY,IAAZ,CAAiB,MAAM,SAAN,CAAgB,QAAhB,CAAyB,iBAA1C,EAA6D,OAA7D,E;AACA,WAAQ,GAAR,CAAY,2CAAZ,E;AACA,WAAQ,GAAR,CAAY,OAAZ,E;AAEA;;;;;;;;kCAMe,O,EAAS,I,EAAM;;AAE9B,OAAI,QAAQ,IAAZ;AACA,OAAI,QAAQ,MAAM,eAAlB;;AAEA,WAAQ,GAAR,CAAY,wCAAZ,E;AACA,WAAQ,GAAR,CAAY,OAAZ,E;;AAEA,OAAI;AACH,QAAI,UAAU;AACZ,kBAAc,QAAQ,EADV;AAEZ,gBAAY;AAFA,KAAd;;AAKA,SAAK,MAAL,CAAY,IAAZ,CAAiB,MAAM,SAAN,CAAgB,QAAhB,CAAyB,iBAA1C,EAA6D,OAA7D,E;AACA,IAPD,CAOE,OAAO,CAAP,EAAU;;AAEX,YAAQ,GAAR,CAAY,0CAAZ,E;AACA,YAAQ,GAAR,CAAY,EAAE,OAAd,E;AACA;AAED;;;;;;;;uCAOoB,I,EAAM,c,EAAgB,Q,EAAU;;AAEpD,OAAI,QAAQ,IAAZ;AACA,OAAI,QAAQ,KAAK,eAAjB;;AAEA,OAAI,YAAY,SAAhB,EAA2B;AAC1B,eAAW,KAAX;AACA;;AAGD,OAAI,WAAW,MAAM,qBAAN,CAA6B,KAAK,MAAL,CAAY,MAAzC,CAAf,C;;AAGA,WAAQ,GAAR,CAAY,6CAAZ,E;AACA,WAAQ,GAAR,CAAY,cAAZ,E;AACA,WAAQ,GAAR,CAAY,QAAZ,E;AACA,WAAQ,GAAR,CAAY,QAAZ,E;;AAGA,OAAI,SAAS,eAAT,IAA4B,CAAhC,EAAmC;;;AAElC,QAAI,QAAJ,EAAc;AACb,oBAAe,OAAf,CAAuB,UAAS,UAAT,EAAqB,EAArB,EAAyB;AAC/C,YAAM,iBAAN,CAAwB,UAAxB,EAAoC,IAApC,E;AACA,MAFD;AAGA,KAJD,MAIO;AACN,qBAAe,OAAf,CAAuB,UAAS,UAAT,EAAqB,EAArB,EAAyB;AAC/C,aAAM,eAAN,CAAsB,UAAtB,EAAkC,IAAlC,E;AACA,OAFD;AAGA;AAED,IAZD,MAYO;;AAEN,oBAAe,OAAf,CAAuB,UAAS,UAAT,EAAqB,EAArB,EAAyB;;AAC/C,UAAI,WAAW,MAAM,kBAAN,CAAyB,WAAW,EAApC,CAAf;AACA,UAAI,CAAC,SAAS,WAAd,EAA0B;AACzB,WAAI,QAAJ,EAAc;AACb,cAAM,iBAAN,CAAwB,UAAxB,EAAoC,IAApC,E;AACA,QAFD,MAEO;AACN,kBAAS,WAAT,CAAqB,UAArB,GAAkC,cAAlC;AACA,eAAM,eAAN,CAAsB,UAAtB,EAAkC,IAAlC,E;AACA;AACD;AACD,MAVD;;AAaA,cAAS,YAAT,CAAsB,OAAtB,CAA8B,UAAS,IAAT,EAAe,EAAf,EAAmB;;;AAEhD,UAAI,CAAC,KAAK,UAAV,EAAsB;AACrB,WAAI,QAAJ,EAAc;AACb,aAAK,UAAL,GAAkB,gBAAlB;AACA,QAFD,MAEO;AACN,aAAK,UAAL,GAAkB,cAAlB;AACA;AACD;AAED,MAVD;;AAaA,cAAS,YAAT,CAAsB,OAAtB,CAA8B,UAAS,IAAT,EAAe,EAAf,EAAmB;;;AAEhD,cAAQ,KAAK,UAAb;AACC,YAAK,cAAL;AACC,cAAM,eAAN,CAAsB,IAAtB,EAA4B,IAA5B;AACA;AACD,YAAK,gBAAL;AACC,cAAM,iBAAN,CAAwB,IAAxB,EAA8B,IAA9B;AACA;;AAED;AACC;AATF;AAYA,MAdD;AAgBA;AAED;;;;;;;;4CAOyB,I,EAAM;;AAE/B,OAAI,QAAQ,IAAZ;AACA,OAAI,QAAQ,MAAM,eAAlB;;AAEA,OAAI,OAAO,KAAK,IAAhB;AACA,OAAI,YAAY,KAAK,SAArB;AACA,OAAI,UAAU,KAAK,OAAnB;;AAGA,WAAQ,GAAR,CAAY,kDAAZ,E;AACA,WAAQ,GAAR,CAAY,SAAZ,E;;AAEA,OAAI;AACH,QAAI,UAAU;AACZ,kBAAc,SADF;AAEZ,gBAAY;AAFA,KAAd;;AAKA,SAAK,MAAL,CAAY,IAAZ,CAAiB,MAAM,SAAN,CAAgB,QAAhB,CAAyB,YAA1C,EAAwD,OAAxD,E;AAEA,IARD,CAQE,OAAO,CAAP,EAAU;;AAEX,YAAQ,GAAR,CAAY,oDAAZ,E;AACA,YAAQ,GAAR,CAAY,EAAE,OAAd,E;AACA;AAED;;;;;;AAQF,IAAI,sBAAsB;AACzB,cAAc,yBADW;AAEzB,oBAAoB;;AAFK,CAA1B;;AAOA,OAAO,OAAP,GAAiB,mBAAjB","file":"serverEngine/NodesNetService.js","sourcesContent":["\"use strict\";\r\n\r\n\r\n/*\r\n Nodes Net service\r\n\r\n - Provides net service for nodes.\r\n - Add node to Net service\r\n - Remove data channel from node\r\n - Get data channels of node\r\n\r\n\r\n*/\r\n\r\nlet EventEmitter = require('events').EventEmitter;\r\n\r\n\r\n\r\n/**\r\n * Nodes net service constants\r\n */\r\nconst NodesNetService_CONSTANTS = {\r\n\t\t\r\n\t\"Messages\" : {\r\n\t\t\"getNetInfo\" : \"Get Net Info\",\r\n\t\t\"NetInfo\" : \"Net Info\",\r\n\t\t\r\n\t\t\r\n\t\t\"createDataChannel\" : \"Create DC\",\r\n\t\t\"DataChannelCreated\" : \"DC Created\",\r\n\t\t\"deleteDataChannel\" : \"Delete DC\",\r\n\t\t\"DataChannelDeleted\" : \"DC Deleted\",\r\n\t\t\r\n\t\t\"getDataChannelOptions\" : \"get DC Options\",\r\n\t\t\"DataChannelOptions\" : \"DC Options\",\r\n\t\t\"SetDCOptions\" : \"Set DC Options\",\r\n\t\t\"DCOptionsUpdated\" : \"DC Options Updated\"\r\n\r\n\r\n\t},\r\n\t\r\n\t\"Events\" : {\r\n\t\t\"DataChannelCreated\" : \"DC Created\"\r\n\r\n\t}\r\n};\r\n\r\n\r\n\r\n/**\r\n * Nodes net service\r\n */\r\nclass NodesNetService {\r\n\t\r\n\tconstructor(nodesManager, nodesNetManager) {\r\n\t\t\r\n\t\tthis.nodesManager = nodesManager;\r\n\t\tthis.nodesNetManager = nodesNetManager;\r\n\t\t\r\n\t\tthis.CONSTANTS = NodesNetService_CONSTANTS;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tinitialize() {\r\n\t\t\r\n\t\tthis._mapControlEvents();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Map control events\r\n\t */\r\n\t_mapControlEvents() {\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodesNetManager;\r\n\t\tlet ndsm = nnets.nodesManager;\r\n\t\t\r\n\t\t\r\n\t\t// Map event NodeAdded\r\n\t\tndsm.eventEmitter.on(ndsm.CONSTANTS.Events.NodeAdded, function(data) {\r\n\t\t\tnnets.addNode(data.node);\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t// Map event DataChannelAdded\r\n\t\tnnetm.eventEmitter.on(nnetm.CONSTANTS.Events.DataChannelAdded, function(channelID) {\n\t\t\t\r\n\t\t\tlet channelSearch = nnetm.getDataChannelByID(channelID);\r\n\t\t\tlet dch = channelSearch.dataChannel;\r\n\t\t\tlet node = dch.config._node;\r\n\t\t\t\r\n\t\t\tif (dch.config._synchro) {\t\t// Data channel added in synchronization process\r\n\t\t\t\t\r\n\t\t\t\tdch.config._synchro = null;\r\n\t\t\t\tnode.socket.emit(nnets.CONSTANTS.Messages.getDataChannelOptions, {\"channelID\": dch.config._dchID});\t// Emit message getDataChannelOptions \r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tvar message = {\r\n\t\t\t\t\t\t\"channelID\" : dch.config._dchID,\r\n\t\t\t\t\t\t\"mode\" : dch.config.mode,\r\n\t\t\t\t\t\t\"socketPort\" : dch.config.socketPort,\r\n\t\t\t\t\t\t\"netLocation\" : dch.config.netLocation\r\n\t\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tnode.socket.emit(nnets.CONSTANTS.Messages.createDataChannel, message);\t// Emit message createDataChannel \r\n\t\t\t\r\n\t\t\t\tconsole.log('<*> ST NodesNetService.createDataChannel');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\tconsole.log(message);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconsole.log('<*> ST NodesNetService.DataChannelAdded');\t// TODO REMOVE DEBUG LOG\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\t// Map event DataChannelRemoved\r\n\t\tnnetm.eventEmitter.on(nnetm.CONSTANTS.Events.DataChannelRemoved, function(channelID) {\r\n\t\t\t\r\n\t\t\tconsole.log('<*> ST NodesNetService.DataChannelRemoved');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <·> ChannelID: ' + channelID);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\t// Map event DeleteDCOnNode\r\n\t\tnnetm.eventEmitter.on(nnetm.CONSTANTS.Events.DeleteDCOnNode, function(data) {\r\n\t\t\t\r\n\t\t\tnnets._deleteDConNode( { \"id\" : data.channelID }, data.node);\r\n\t\t\t\r\n\t\t\tconsole.log('<*> ST NodesNetService.DeleteDCOnNode');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <·> NodeID: ' + data.node.config.nodeID);\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <·> ChannelID: ' + data.channelID);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\t// Map event SetDCOptionsOnNode\r\n\t\tnnetm.eventEmitter.on(nnetm.CONSTANTS.Events.SetDCOptionsOnNode, function(data) {\r\n\t\t\t\r\n\t\t\tnnets._event_SetDCOptionsOnNode(data);\r\n\t\t\t\r\n\t\t\tconsole.log('<*> ST NodesNetService.SetDCOptionsOnNode');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <·> NodeID: ' + data.node.config.nodeID);\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <·> ChannelID: ' + data.channelID);\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <·> Options: ' + data.options);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Add node\r\n\t */\r\n\taddNode(node) {\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodesNetManager;\r\n\t\tlet ndsm = nnets.nodesManager;\r\n\t\t\r\n\t\t\r\n\t\tconsole.log('<*> ST NodesNetService.addNode');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t\r\n\t\tlet nodeSearch = ndsm.getNodeByID(node.config.nodeID);\r\n\t\tif (nodeSearch.stNode == null) {\r\n\t\t\tthrow \"node not found.\";\r\n\t\t}\r\n\t\t\r\n\t\tlet stNode = nodeSearch.stNode;\r\n\t\t\r\n\t\t\r\n\t\tif (stNode.config._nodesNetService && \r\n\t\t\t\tstNode.config._nodesNetService.active) {\r\n\t\t\tthrow \"Node has net service.\";\r\n\t\t}\r\n\t\t\r\n\t\tthis._mapControlMessages(stNode);\r\n\t\t\r\n\t\t\r\n\t\tif (!stNode.config._nodesNetService) {\r\n\t\t\tstNode.config._nodesNetService = {\r\n\t\t\t\t\"active\" : true\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tstNode.socket.emit(nnets.CONSTANTS.Messages.getNetInfo);\t// Emit message getNetInfo\r\n\r\n\t\t\r\n\t\tconsole.log('<*> ST NodesNetService.addNode');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(' <···> Message getNetInfo emited.');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Map control messages\r\n\t */\r\n\t_mapControlMessages(node, socket) {\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet _node = node;\r\n\t\t\r\n\t\tif (socket == undefined) {\r\n\t\t\tsocket = node.socket;\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log('<*> ST NodesNetService._mapControlMessages');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t\r\n\t\t// Map event disconnect \r\n\t\tsocket.on('disconnect', function(){\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.getNetInfo);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.NetInfo);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.DataChannelCreated);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.DataChannelDeleted);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.DataChannelOptions);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.DCOptionsUpdated);\r\n\r\n\t\t\t_node.config._nodesNetService.active = false;\t// Set active property to false\r\n\r\n\t\t  });\r\n\t\t\r\n\t\t// Map message getNetInfo\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.getNetInfo, function(msg){\r\n\t\t\tnnets._msg_getNetInfo(msg, socket, {\r\n\t\t\t\t\"node\" : _node.config.nodeID,\r\n\t\t\t\t\"socket\" : socket\r\n\t\t\t});\r\n\t\t  });\r\n\t\t\r\n\t\t// Map message NetInfo\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.NetInfo, function(msg){\r\n\t\t\tnnets._msg_NetInfo(msg, socket, {\r\n\t\t\t\t\"node\" : _node,\r\n\t\t\t\t\"socket\" : socket\r\n\t\t\t});\r\n\t\t  });\r\n\t\t\r\n\t\t\r\n\t\t// Map message DataChannelCreated\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.DataChannelCreated, function(msg){\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tnnets._msg_DataChannelCreated(msg, socket, {\r\n\t\t\t\t\t\"node\" : _node,\r\n\t\t\t\t\t\"nodeID\" : _node.config.nodeID,\r\n\t\t\t\t\t\"channelID\" : msg.channelID\r\n\t\t\t\t});\t\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// TODO: handle exception\r\n\t\t\t\tconsole.log('<EEE> ST NodesNetService.DataChannelCreated');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t}\r\n\t\t\t\r\n\t\t  });\r\n\t\t\r\n\t\t\r\n\t\t// Map message DataChannelDeleted\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.DataChannelDeleted, function(msg){\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tnnets._msg_DataChannelDeleted(msg, socket, {\r\n\t\t\t\t\t\"node\" : _node,\r\n\t\t\t\t\t\"nodeID\" : _node.config.nodeID,\r\n\t\t\t\t\t\"channelID\" : msg.channelID\r\n\t\t\t\t});\t\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// TODO: handle exception\r\n\t\t\t\tconsole.log('<EEE> ST NodesNetService.DataChannelDeleted');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t}\r\n\t\t\t\r\n\t\t  });\r\n\t\t\r\n\t\t\r\n\t\t// Map message DataChannelOptions\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.DataChannelOptions, function(msg){\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tnnets._msg_DataChannelOptions(msg, socket, {\r\n\t\t\t\t\t\"node\" : _node,\r\n\t\t\t\t\t\"nodeID\" : _node.config.nodeID,\r\n\t\t\t\t\t\"channelID\" : msg.channelID,\r\n\t\t\t\t\t\"options\" : msg.options,\r\n\t\t\t\t\t\"_nnets\": nnets\r\n\t\t\t\t});\t\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// TODO: handle exception\r\n\t\t\t\tconsole.log('<EEE> ST NodesNetService.DataChannelOptions');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t}\r\n\t\t\t\r\n\t\t  });\r\n\t\t\r\n\t\t// Map message DCOptionsUpdated\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.DCOptionsUpdated, function(msg){\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tnnets._msg_DCOptionsUpdated(msg, socket, {\r\n\t\t\t\t\t\"node\" : _node,\r\n\t\t\t\t\t\"nodeID\" : _node.config.nodeID,\r\n\t\t\t\t\t\"channelID\" : msg.channelID\r\n\t\t\t\t});\t\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// TODO: handle exception\r\n\t\t\t\tconsole.log('<EEE> ST NodesNetService.DCOptionsUpdated');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t}\r\n\t\t\t\r\n\t\t  });\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message getNetInfo\r\n\t */\r\n\t_msg_getNetInfo(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet message = {};\r\n\t\t\r\n\t\tconsole.log('<*> ST NodesNetService._msg_getNetInfo');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\r\n\r\n\t\tlet dcSearch = nnets.nodesNetManager.getDataChannelsOfNode( options.node );\r\n\t\tmessage.numDataChannels = dcSearch.numDataChannels;\r\n\t\t\r\n\t\tif (dcSearch.numDataChannels > 0) {\r\n\t\t\tmessage.dataChannels = [];\r\n\t\t\t\r\n\t\t\tdcSearch.dataChannels.forEach(function(dch, _i) {\n\t\t\t\tvar channelInfo = {\r\n\t\t\t\t\t\t\"id\" : dch.config._dchID,\r\n\t\t\t\t\t\t\"mode\" : dch.config.mode,\r\n\t\t\t\t\t\t\"type\" : dch.config.type\r\n\t\t\t\t\t};\r\n\t\t\t\tmessage.dataChannels.push(channelInfo);\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tsocket.emit(nnets.CONSTANTS.Messages.NetInfo, message);\t// Emit message NetInfo\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message NetInfo\r\n\t */\r\n\t_msg_NetInfo(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet node = options.node;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodesNetService._msg_NetInfo');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\t\r\n\t\tif (!node.config._nodesNetService.active) {\r\n\t\t\tnnets._synchroNodeChannels(node, msg.dataChannels, false);\r\n\t\t\tnode.config._nodesNetService.active = true;\r\n\t\t} else {\r\n\t\t\tnnets._synchroNodeChannels(node, msg.dataChannels, true);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message DataChannelCreated\r\n\t */\r\n\t_msg_DataChannelCreated(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodesNetManager;\r\n\t\tlet stNode = options.node;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tconsole.log('<*> ST NodesNetService._msg_DataChannelCreated');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(options);\t// TODO REMOVE DEBUG LOG\r\n//\t\tconsole.log(nnets);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t\r\n\t\tlet dcSearch = nnetm.getDataChannelOfNode(options.nodeID, options.channelID);\r\n\t\tif (dcSearch.dataChannel == null) {\r\n\t\t\tthrow \"Data channel not found.\";\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log('...');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t\r\n\t\tlet dch = dcSearch.dataChannel;\r\n\t\t\r\n\t\tif (dch.config._netState == undefined || \r\n\t\t\t\tdch.config._netState != nnetm.CONSTANTS.States.DCstate_Config) {\r\n\t\t\tthrow \"Bad Data channel state.\";\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log('...');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t\r\n\t\tdch.config._netState = dch.CONSTANTS.States.DCstate_Ready;\r\n\t\t\r\n\t\tstNode.socket.emit(nnetm.CONSTANTS.Messages.getDataChannelOptions, {\"channelID\": options.channelID});\t// Emit message getDataChannelOptions\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message DataChannelDeleted\r\n\t */\r\n\t_msg_DataChannelDeleted(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodesNetManager;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodesNetService._msg_DataChannelDeleted');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(options);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\ttry {\r\n\t\t\tnnetm.removeDataChannelFromNode(options.node, msg.channelID);\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tconsole.log('<EEE> ST NodesNetService._msg_DataChannelDeleted');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Message DataChannelOptions\r\n\t */\r\n\t_msg_DataChannelOptions(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodesNetManager;\r\n\t\tlet node = options.node;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodesNetService._msg_DataChannelOptions');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(options);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\ttry {\r\n\r\n\t\t\tlet dchSearch = nnetm.getDataChannelOfNode(options.nodeID, options.channelID);\r\n\t\t\tif (dchSearch.dataChannel == null) {\r\n\t\t\t\tthrow \"Data channel not found.\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet dch = dchSearch.dataChannel;\r\n\t\t\tlet dchOptions = options.options;\r\n\t\t\t\r\n\t\t\tdch.config._netState = dchOptions.state;\r\n\t\t\tdch.config.socketPort = dchOptions.socketPort;\r\n\t\t\tdch.config.netLocation = dchOptions.netLocation;\r\n\t\t\t\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tconsole.log('<EEE> ST NodesNetService._msg_DataChannelOptions');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message DCOptionsUpdated\r\n\t */\r\n\t_msg_DCOptionsUpdated(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodesNetManager;\r\n\t\tlet node = options.node;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodesNetService._msg_DCOptionsUpdated');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(options);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\t\r\n\t\ttry {\r\n\r\n\t\t\tlet dchSearch = nnetm.getDataChannelOfNode(options.nodeID, options.channelID);\r\n\t\t\tif (dchSearch.dataChannel == null) {\r\n\t\t\t\tthrow \"Data channel not found.\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet dch = dchSearch.dataChannel;\r\n\t\t\tlet dchOptions = options.options;\r\n\t\t\t\r\n\t\t\tlet message = {\r\n\t\t\t\t\t\"channelID\" : dch.config._dchID\r\n\t\t\t\t};\r\n\t\t\t\r\n\t\t\tnode.socket.emit(nnetm.CONSTANTS.Messages.getDataChannelOptions, message);\t// Emit message getDataChannelOptions \r\n\t\t\t\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tconsole.log('<EEE> ST NodesNetService._msg_DCOptionsUpdated');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create data channel on node\r\n\t */\r\n\t_createDConNode(dch, node) {\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodesNetManager;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodesNetService._createDConNode');\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\tvar message = {\r\n\t\t\t\t\"channelID\" : dch.config._dchID,\r\n\t\t\t\t\"mode\" : dch.config.mode,\r\n\t\t\t\t\"socketPort\" : dch.config.socketPort,\r\n\t\t\t\t\"netLocation\" : dch.config.netLocation\r\n\t\t\t};\r\n\t\t\t\r\n\t\tnode.socket.emit(nnetm.CONSTANTS.Messages.createDataChannel, message);\t// Emit message createDataChannel \r\n\t\tconsole.log(' <·> ST NodesNetService.createDataChannel');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(message);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Delete data channel on node\r\n\t */\r\n\t_deleteDConNode(nodeDCH, node) {\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodesNetManager;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodesNetService._deleteDConNode');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(nodeDCH);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\ttry {\r\n\t\t\tvar message = {\r\n\t\t\t\t\t\"channelID\" : nodeDCH.id,\r\n\t\t\t\t\t\"synchro\" : true\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\tnode.socket.emit(nnets.CONSTANTS.Messages.deleteDataChannel, message);\t// Emit message deleteDataChannel \r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tconsole.log('<EEE> ST NodesNetService._deleteDConNode');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e.message);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Synchronize node channels\r\n\t */\r\n\t_synchroNodeChannels(node, dchnlistOfNode, fromNode) {\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = this.nodesNetManager;\r\n\t\t\r\n\t\tif (fromNode == undefined) {\r\n\t\t\tfromNode = false;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tlet dcSearch = nnetm.getDataChannelsOfNode( node.config.nodeID );\t// Search data channels of node\r\n\t\t\r\n\t\t\r\n\t\tconsole.log('<*> ST NodesNetService._synchroNodeChannels');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(dchnlistOfNode);\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(fromNode);\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(dcSearch);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t\r\n\t\tif (dcSearch.numDataChannels == 0) {\t// No data channels for node\r\n\t\t\t\r\n\t\t\tif (fromNode) {\r\n\t\t\t\tdchnlistOfNode.forEach(function(_dchOfNode, _i) {\r\n\t\t\t\t\tnnetm._createDCfromNode(_dchOfNode, node);\t// Create data channel from node\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tdchnlistOfNode.forEach(function(_dchOfNode, _i) {\r\n\t\t\t\t\tnnets._deleteDConNode(_dchOfNode, node);\t// Delete data channel on node\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tdchnlistOfNode.forEach(function(_dchOfNode, _i) {\t// Check channel list provided by node\r\n\t\t\t\tlet chSearch = nnetm.getDataChannelByID(_dchOfNode.id);\r\n\t\t\t\tif (!chSearch.dataChannel){\r\n\t\t\t\t\tif (fromNode) {\r\n\t\t\t\t\t\tnnetm._createDCfromNode(_dchOfNode, node );\t// Create data channel from node\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchSearch.dataChannel._synchroOP = \"deleteOnNode\";\r\n\t\t\t\t\t\tnnets._deleteDConNode(_dchOfNode, node);\t// Delete data channel on node\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tdcSearch.dataChannels.forEach(function(_dch, _i) {\t// Check the rest of the channels\r\n\t\t\t\t\r\n\t\t\t\tif (!_dch._synchroOP) {\r\n\t\t\t\t\tif (fromNode) {\r\n\t\t\t\t\t\t_dch._synchroOP = \"deleteOnServer\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t_dch._synchroOP = \"createOnNode\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tdcSearch.dataChannels.forEach(function(_dch, _i) {\t// Do synchronization tasks\r\n\t\t\t\t\r\n\t\t\t\tswitch (_dch._synchroOP) {\r\n\t\t\t\t\tcase \"createOnNode\":\r\n\t\t\t\t\t\tnnets._createDConNode(_dch, node);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"deleteOnServer\":\r\n\t\t\t\t\t\tnnetm._deleteDConServer(_dch, node);\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Set options of data channel on node\r\n\t */\r\n\t_event_SetDCOptionsOnNode(data) {\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodesNetManager;\r\n\t\t\r\n\t\tlet node = data.node;\r\n\t\tlet channelID = data.channelID;\r\n\t\tlet options = data.options;\r\n\t\t\r\n\t\t\r\n\t\tconsole.log('<*> ST NodesNetService._event_SetDCOptionsOnNode');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(channelID);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\ttry {\r\n\t\t\tvar message = {\r\n\t\t\t\t\t\"channelID\" : channelID,\r\n\t\t\t\t\t\"options\" : options\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\tnode.socket.emit(nnets.CONSTANTS.Messages.SetDCOptions, message);\t// Emit message SetDCOptions \r\n\t\t\t\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tconsole.log('<EEE> ST NodesNetService._event_SetDCOptionsOnNode');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e.message);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n}\r\n\r\n\r\nvar NodesNetService_Lib = {\r\n\t\"CONSTANTS\" : NodesNetService_CONSTANTS,\r\n\t\"NodesNetService\" : NodesNetService\r\n\t\r\n};\r\n\r\n\r\nmodule.exports = NodesNetService_Lib;"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STServer\\es6"}