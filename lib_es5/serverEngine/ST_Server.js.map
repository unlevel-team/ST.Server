{"version":3,"sources":["serverEngine/ST_Server.js"],"names":[],"mappings":"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","file":"serverEngine/ST_Server.js","sourcesContent":["\"use strict\";\r\n\r\n/*\r\n ST Server\r\n SomeThings Server\r\n \r\n \r\n - Provides the main class of ST server\r\n - Load configuration\r\n - Start managers\r\n - Start services\r\n - byebye for shutdown\r\n\r\n */\r\n\r\n\r\n/**\r\n * import ServerConfiguration\r\n * @ignore\r\n */\r\nlet ServerConfiguration = require('./ServerConfiguration.js');\r\n\r\n/**\r\n * import NodesControlService\r\n * @ignore\r\n */\r\nlet NodesControlService = require('./NodesControlService.js');\r\n\r\n/**\r\n * import NodesManager\r\n * @ignore\r\n */\r\nlet NodesManager = require('./NodesManager.js');\r\n\r\n/**\r\n * import ServerControlService\r\n * @ignore\r\n */\r\nlet ServerControlService = require('./ServerControlService.js');\r\n\r\n\r\n/**\r\n * import readline\r\n * @ignore\r\n */\r\nconst readline = require('readline');\r\n\r\n\r\n/**\r\n * ST Server\r\n * \r\n * @class\r\n * @memberof st.serverEngine\r\n * \r\n * @property {object} serverConfiguration - Server configuration object\r\n * \r\n * @property {EnginesSystem} ngSYS - Engines System\r\n * @property {SensorsManager} sensorsManager - Sensors manager\r\n * @property {ActuatorsManager} actuatorsManager - Actuators manager\r\n * \r\n * @property {NodesManager} nodesManager - Nodes manager\r\n * @property {NodesControlService} nodesControlService - Nodes Control service\r\n * \r\n * @property {NodesNetManager} nodesNetManager - Nodes Net manager\r\n * @property {NodesNetService} nodesNetService - Nodes Net service\r\n * \r\n * @property {ServerControlService} serverControlService - Nodes Net service\r\n * \r\n * @property {object} miniCLI - mini CLI\r\n * \r\n */\r\nclass STServer {\r\n\t\r\n\t/**\r\n\t * \r\n\t * @constructs STServer\r\n\t * \r\n\t * @param {object} options - Options object\r\n\t * \r\n\t */\r\n\tconstructor(options) {\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tlet _stServer = this;\r\n\t\t_stServer._config = {};\r\n\t\t\r\n\t\tif (options.config !== undefined) {\r\n\t\t\t_stServer._config = options.config;\r\n\t\t}\r\n\t\t\r\n\t\t_stServer.serverConfiguration = null;\r\n\t\t\r\n\t\t\r\n\t\t_stServer.ngSYS = null;\r\n\t\t_stServer.sensorsManager = null;\r\n\t\t_stServer.actuatorsManager = null;\r\n\t\t\r\n\t\t_stServer.nodesManager = null;\r\n\t\t_stServer.nodesControlService = null;\r\n\t\t\r\n\t\t_stServer.nodesNetManager = null;\r\n\t\t_stServer.nodesNetService = null;\r\n\t\t\r\n\t\t_stServer.serverNetManager = null;\r\n\t\t\r\n\t\t_stServer.serverControlService = null;\r\n\t\t\r\n\t\t_stServer.miniCLI = null;\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize ST Server\r\n\t */\r\n\tinit_Server() {\r\n\t\t\r\n\t\tlet stServer = this;\r\n\t\t\r\n\t\tstServer.loadConfig();\r\n\t\t\r\n\t\t\r\n//\t\tstServer._init_EnginesSystem__OLD();\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tstServer._init_NodesManager();\r\n\t\tstServer._init_NodesControlService();\r\n\t\t\r\n\t\tstServer._init_EnginesSystem();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Load configuration\r\n\t */\r\n\tloadConfig() {\r\n\t\t\r\n\t\tlet _stServer = this;\r\n\t\tlet _config = _stServer._config;\r\n\t\t\r\n\t\tif (_stServer.serverConfiguration !== null) {\r\n\t\t\tthrow 'Server configuration is loaded.';\r\n\t\t}\r\n\t\t\r\n\t\t// --- ~~ --- ~~ --- ~~ --- ~~ --- \r\n\t\t// Server configuration \r\n\t\t// -------------------------------------------------------------------------------|\\/|---\r\n\t\t_stServer.serverConfiguration = new ServerConfiguration();\r\n\r\n\t\t_stServer.serverConfiguration.readFile({\r\n\t\t\t'configFile': _config.configfile\r\n\t\t});\r\n\r\n\t\tif (_stServer.serverConfiguration.config === null) {\r\n\t\t\t\r\n\t\t\tconsole.log('Error in configuration');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t\tprocess.exit(0);\r\n//\t\t\treturn -1;\r\n\t\t\t\r\n\t\t}\r\n\t\tconsole.log('<*> ST Server');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(' <~~~> ServerConfiguration');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(_stServer.serverConfiguration.config);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t//-------------------------------------------------------------------------------|/\\|---\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize Nodes manager\r\n\t */\r\n\t_init_NodesManager() {\r\n\t\t\r\n\t\tlet stServer = this;\r\n\t\t\r\n\t\tif (stServer.nodesManager !== null) {\r\n\t\t\tthrow 'Nodes manager initialized.';\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//--- ~~ --- ~~ --- ~~ --- ~~ --- \r\n\t\t// Nodes Manager \r\n\t\t//-------------------------------------------------------------------------------|\\/|---\r\n\t\tstServer.nodesManager = new NodesManager();\r\n\t\tlet nmgr = stServer.nodesManager;\r\n\r\n\t\t// Map event NodeAdded\r\n\t\tnmgr.eventEmitter.on(nmgr.CONSTANTS.Events.NodeAdded, function(data){\r\n\t\t\tconsole.log('<*> ST Server.nodesManager');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> Events.NodeAdded');\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n//\t\t\tstServer.sensorsManager.addSensorsFromNode( data.node );\t// bind Node to Sensors manager\r\n//\t\t\tstServer.actuatorsManager.addActuatorsFromNode( data.node );\t// bind Node to Actuators manager\r\n\r\n\t\t});\r\n\r\n\t\t// Map event NodeRemoved\r\n\t\tnmgr.eventEmitter.on(nmgr.CONSTANTS.Events.NodeRemoved, function(data){\r\n\t\t\tconsole.log('<*> ST Server.nodesManager');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> Events.NodeRemoved');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t});\r\n\t\t//-------------------------------------------------------------------------------|/\\|---\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize engines system\r\n\t * \r\n\t * @throws Exception\r\n\t * \r\n\t */\r\n\t_init_EnginesSystem() {\r\n\t\t\r\n\t\tlet stServer = this;\r\n\t\t\r\n\t\tif (stServer.ngSYS !== null) {\r\n\t\t\tthrow 'Engines System initialized.';\r\n\t\t}\r\n\t\t\r\n\t\tlet STEngines = require('st.engines');\r\n\t\t\r\n\t\t\r\n\t\t//--- ~~ --- ~~ --- ~~ --- ~~ --- \r\n\t\t// Engines System \r\n\t\t//\r\n\t\t// Set role Server & control channel\r\n\t\tlet ngSYSconfig = {\r\n\t\t\t\t\r\n\t\t\t\"role\" : \"Server\",\r\n\t\t\t\"controlChannel\" : stServer.nodesControlService,\r\n\t\t\t\r\n\t\t\t\"nodesManager\" : stServer.nodesManager\r\n\t\t};\r\n\t\t\r\n\r\n\t\ttry {\r\n\t\t\tstServer.ngSYS = STEngines.getEnginesSystem(ngSYSconfig);\r\n\t\t\t\r\n\t\t\tstServer.ngSYS.initialize();\r\n\t\t\t\r\n\t\t\tstServer.sensorsManager = stServer.ngSYS.sensorsManager;\r\n\t\t\tstServer.actuatorsManager = stServer.ngSYS.actuatorsManager;\r\n\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tthrow \"Cannot initialize engines system. \" + e;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize Nodes Control Service\r\n\t * <pre>\r\n\t * Service for control Nodes\r\n\t * </pre>\r\n\t */\r\n\t_init_NodesControlService() {\r\n\t\t\r\n\t\tlet stServer = this;\r\n\t\t\r\n\t\tif (stServer.nodesControlService !== null) {\r\n\t\t\tthrow 'Nodes Control Service initialized.';\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tlet config = stServer.serverConfiguration.config;\r\n\t\t\r\n\t\t\r\n\t\t//--- ~~ --- ~~ --- ~~ --- ~~ --- \r\n\t\t// Nodes control Service \r\n\t\t//-------------------------------------------------------------------------------|\\/|---\r\n\r\n\t\tstServer.nodesControlService = new NodesControlService( config );\r\n\r\n\t\tlet ncsrv = stServer.nodesControlService;\r\n\t\t\r\n\t\tncsrv.eventEmitter.on(ncsrv.CONSTANTS.Events.ConfigError, function(data){\r\n\t\t\tconsole.log('EEE> ST Server.ConfigError');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> Configuration error.');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tstServer._byebye();\r\n\t\t});\r\n\r\n\t\tncsrv.eventEmitter.on(ncsrv.CONSTANTS.Events.ServerListening, function(data){\r\n\t\t\tconsole.log('<*> ST Server.nodesControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> Server Listening');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t});\r\n\r\n\t\tncsrv.eventEmitter.on(ncsrv.CONSTANTS.Events.ServerClosed, function(data){\r\n\t\t\tconsole.log('<*> ST Server.nodesControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> Server Closed');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t});\r\n\r\n\t\tncsrv.eventEmitter.on(ncsrv.CONSTANTS.Events.NodeConnected, function(data){\r\n\t\t\tconsole.log('<*> ST Server.nodesControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> Events.NodeConnected');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t\tstServer.nodesManager.addNode(null, data.socket);\r\n\t\t});\r\n\r\n\t\tncsrv.eventEmitter.on(ncsrv.CONSTANTS.Events.NodeDisconnected, function(data){\r\n\t\t\tconsole.log('<*> ST Server.nodesControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> Events.NodeDisconnected');\t// TODO REMOVE DEBUG LOG\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tncsrv.startService();\r\n\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tconsole.log('Cannot start the service');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t}\r\n\t\t//-------------------------------------------------------------------------------|/\\|---\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize ST Network\r\n\t * <pre>\r\n\t * Initializes all managers and services related to ST Network.\r\n\t * </pre>\r\n\t */\r\n\tinit_STNetwork(options) {\r\n\t\t\r\n\t\tlet _stServer = this;\r\n\t\t\r\n\t\tif (options === undefined || \r\n\t\t\t\toptions === null) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\t//--- ~~ --- ~~ --- ~~ --- ~~ --- \r\n\t\t// ST Network \r\n\t\t\r\n\t\tlet _services = require('st.network').get_Services();\r\n\t\t\r\n\t\t\r\n\t\ttry {\r\n\t\t\t_stServer._init_NodesNetManager({\r\n\t\t\t\t\"Services\" : _services\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tthrow \"Cannot initialize NodesNetManager\" + e;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\ttry {\r\n\t\t\t_stServer._init_NodesNetService({\r\n\t\t\t\t\"Services\" : _services\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tthrow \"Cannot initialize NodesNetService\" + e;\r\n\t\t}\r\n\r\n\t\t\r\n\t\ttry {\r\n\t\t\t_stServer._init_ServerCOMSystem();\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tthrow \"Cannot initilize ServerCOMSystem\" + e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize Nodes Net manager\r\n\t * <pre>\r\n\t * Initializes the Net manager for nodes\r\n\t * </pre>\r\n\t */\r\n\t_init_NodesNetManager(options) {\r\n\t\t\r\n\t\tlet _stServer = this;\r\n\t\t\r\n\t\t\r\n\t\tif (options === undefined || \r\n\t\t\t\toptions === null) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tif (options.Services === undefined) {\r\n\t\t\tthrow 'Option Services is required.';\r\n\t\t}\r\n\t\tlet _services = options.Services;\r\n\r\n\t\t\r\n\t\tif (_stServer.nodesNetManager !== null) {\r\n\t\t\tthrow 'Nodes net manager initialized.';\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tlet NodesNetManager = _services.get_NodesNetManager();\r\n\t\t\r\n\t\t//--- ~~ --- ~~ --- ~~ --- ~~ --- \r\n\t\t// Nodes net Manager \r\n\t\t_stServer.nodesNetManager = new NodesNetManager();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize Nodes Net service\r\n\t * <pre>\r\n\t * Initializes the Net services for nodes\r\n\t * </pre>\r\n\t */\r\n\t_init_NodesNetService(options) {\r\n\t\t\r\n\t\tlet _stServer = this;\r\n\t\t\r\n\t\tif (options === undefined || \r\n\t\t\t\toptions === null) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tif (_stServer.nodesNetService !== null) {\r\n\t\t\tthrow 'Nodes net service initialized.';\r\n\t\t}\r\n\t\t\r\n\t\tif (options.Services === undefined) {\r\n\t\t\tthrow 'Option Services is required.';\r\n\t\t}\r\n\t\t\t\t\r\n\t\t\r\n\t\tlet _services = options.Services;\r\n\t\t\r\n\t\tlet NodesNetService = _services.get_NodesNetService();\r\n\t\t\r\n\t\t//--- ~~ --- ~~ --- ~~ --- ~~ --- \r\n\t\t// Nodes net service \r\n\t\t_stServer.nodesNetService = new NodesNetService(_stServer.nodesManager, _stServer.nodesNetManager);\r\n\t\t_stServer.nodesNetService.initialize();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize COM system\r\n\t */\r\n\t_init_ServerCOMSystem() {\r\n\t\t\r\n\t\tlet _stServer = this;\r\n\t\t\t\r\n\t\tif (_stServer.comSYS !== undefined &&\r\n\t\t\t\t_stServer.comSYS !== null) {\r\n\t\t\tthrow 'Server COM System initialized.';\r\n\t\t}\r\n\t\t\r\n\t\tlet _COMSystem = require('st.network').get_COMSystem_Lib();\r\n\t\t\r\n\t\t//--- ~~ --- ~~ --- ~~ --- ~~ --- \r\n\t\t// COM System \r\n\t\tlet _comSYS_Config = {\r\n\t\t\t\"controlChannel\" : null,\r\n\t\t\t\"role\" : \"Server\"\r\n\t\t};\r\n\t\t\r\n\t\t_stServer.comSYS = _COMSystem.getCOMSystem( _comSYS_Config );\r\n\t\t\r\n\t\ttry {\r\n\t\t\t_stServer.comSYS.initialize();\r\n\t\t} catch (e) {\r\n\t\t\t\r\n\t\t\tconsole.log('<EEE> ST Server.init_ServerCOMSystem');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> ' + e);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t_stServer._byebye();\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize Server Control Service\r\n\t * \r\n\t * Is the server for manage messages HTTP/REST\r\n\t */\r\n\tinit_ServerControlService() {\r\n\t\t\r\n\t\tlet _stServer = this;\r\n\t\t\r\n\t\tif (_stServer.serverControlService !== null) {\r\n\t\t\tthrow 'Server Control Service initialized.';\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//--- ~~ --- ~~ --- ~~ --- ~~ --- \r\n\t\t// Server control Service \r\n\t\t//-------------------------------------------------------------------------------|\\/|---\r\n\r\n\t\t_stServer.serverControlService = new ServerControlService( _stServer );\r\n\t\t\r\n\t\tlet _scs = _stServer.serverControlService;\r\n\r\n\t\t_scs.eventEmitter.on(_scs.CONSTANTS.Events.ServerListening, function(data){\r\n\t\t\tconsole.log('<*> ST Server.serverControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> Server Listening');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t});\r\n\r\n\t\t_scs.eventEmitter.on(_scs.CONSTANTS.Events.ServerClosed, function(data){\r\n\t\t\tconsole.log('<*> ST Server.serverControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> Server Closed');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t});\r\n\t\t\r\n\t\t_scs.eventEmitter.on(_scs.CONSTANTS.Events.ConfigError, function(data){\r\n\t\t\tconsole.log('<EEE> ST Server.serverControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(' <~~~> Config Error');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(data);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\t_scs.initialize();\r\n\t\t\t_scs.startService();\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tconsole.log('<EEE> ST Server.serverControlService');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\r\n\t\t}\r\n\t\t//-------------------------------------------------------------------------------|/\\|---\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * ByeBye method...\r\n\t */\r\n\t_byebye() {\r\n\t\t\r\n\t\tlet stServer = this;\r\n\t\t\r\n\t\tconsole.log('Have a great day!');\r\n\t\t  \r\n\t\tstServer.nodesControlService.stopService();\r\n\t\tstServer.serverControlService.stopService();\r\n\r\n\t\tprocess.exit(0);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize Mini CLI\r\n\t */\r\n\tinit_MiniCLI() {\r\n\r\n\t\tlet stServer = this;\r\n\t\t\r\n\t\tif (stServer.miniCLI !== undefined &&\r\n\t\t\t\tstServer.miniCLI !== null) {\r\n\t\t\tthrow 'Mini CLI initialized.';\r\n\t\t}\r\n\t\t\r\n\t\tstServer.miniCLI = readline.createInterface(process.stdin, process.stdout);\r\n\t\tstServer.miniCLI.setPrompt('ST.Server> ');\r\n\r\n\t\tstServer.miniCLI.prompt();\r\n\r\n\t\tstServer.miniCLI.on('line', function(line) {\r\n\t\t\tvar line_ = line.trim();\r\n\t\t  switch(line_) {\r\n\t\t      \r\n\t\t    case 'nodeslist':\r\n\t\t        console.log('>>> NODES List');\r\n\t\t        console.log( stServer.nodesManager.nodeList);\r\n\t\t        break;\r\n\t\t        \r\n\t\t    case 'sensorslist':\r\n\t\t        console.log('>>> Sensors List');\r\n\t\t        console.log( stServer.sensorsManager.sensorsList);\r\n\t\t        break;\r\n\t\t        \r\n\t\t    case 'actuatorslist':\r\n\t\t        console.log('>>> Actuators List');\r\n\t\t        console.log( stServer.actuatorsManager.actuatorsList);\r\n\t\t        break;\r\n\t\t        \r\n\t\t    case 'help':\r\n\t\t    \tvar msg = '>>> Help Menu \\n';\r\n\t\t    \tmsg += 'nodeslist: list of nodes... \\n';\r\n\t\t    \tmsg += 'sensorslist: list of sensors... \\n';\r\n\t\t    \tmsg += 'actuatorslist: list of actuatorslist... \\n';\r\n\t\t    \tmsg += 'help: this help...';\r\n\t\t    \t\r\n\t\t        console.log(msg);\r\n\t\t        break;\r\n\t\t        \r\n\t\t        \r\n\t\t    default:\r\n\t\t    \tif (line_ !== '') {\r\n\t\t    \t      console.log('>???> Say what? I might have heard `' + line_ + '`');\r\n\t\t    \t}\r\n\t\t      break;\r\n\t\t  }\r\n\t\t  \r\n\t\t  stServer.miniCLI.prompt();\r\n\t\t  \r\n\t\t}).on('close', function() {\r\n\t\t\tstServer._byebye();\r\n\t\t});\r\n\r\n\t}\r\n\t\r\n}\r\n\r\n\r\nmodule.exports = STServer;\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STServer\\es6"}