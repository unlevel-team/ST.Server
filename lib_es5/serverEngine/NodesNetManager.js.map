{"version":3,"sources":["serverEngine/NodesNetManager.js"],"names":[],"mappings":"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","file":"serverEngine/NodesNetManager.js","sourcesContent":["\"use strict\";\r\n\r\n/*\r\n Nodes Net manager\r\n\r\n - Provides net management for nodes.\r\n - Add data channel to node\r\n - Remove data channel from node\r\n - Get data channels of node\r\n\r\n\r\n */\r\nlet DataChannelsManager = require('st.network').DataChannelsManager;\r\n\r\n//let DataChannelsManager = require('../stNetwork/DataChannel.js').DataChannelsManager;\r\n\r\n\r\n/**\r\n * Nodes net manager\r\n */\r\nclass NodesNetManager extends DataChannelsManager {\r\n\r\n\r\n\tconstructor() {\r\n\t\t\r\n\t\tsuper();\r\n\r\n\t\tlet nnetm = this;\r\n\r\n\t\tnnetm.CONSTANTS.Events.DeleteDCOnNode = \"Delete DC on Node\";\r\n\t\tnnetm.CONSTANTS.Events.SetDCOptionsOnNode = \"Set DC optons on Node\";\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Add data channel to node\r\n\t */\r\n\taddDataChannelToNode(node, dchID, config) {\r\n\r\n\t\tlet nnetm = this;\r\n\r\n\t\tlet dch_Config = {\r\n\t\t\t'id' : node.config.nodeID + '.' + dchID,\r\n\t\t\t'type' : nnetm.CONSTANTS.Config.DCtype_socketio,\r\n\t\t\t'_node' : node,\r\n\t\t\t'_nodeID' : node.config.nodeID,\r\n\t\t\t'_dchID' : dchID,\r\n\t\t\t'_netState' : nnetm.CONSTANTS.States.DCstate_Config\r\n\t\t};\r\n\r\n\r\n\t\t// · · · ^^^ · · ·  ^^^ · · ·  ^^^ · · · ^^^ · · ·  ^^^ · |\\/|···\r\n\t\t// Extra config parameters\r\n\t\tif (config != undefined &&\r\n\t\t\t\tconfig != null) {\r\n\r\n\t\t\tif (config.mode) {\r\n\t\t\t\tdch_Config.mode = config.mode;\r\n\t\t\t}\r\n\r\n\t\t\tif (config.socketPort) {\r\n\t\t\t\tdch_Config.socketPort = config.socketPort;\r\n\t\t\t}\r\n\r\n\t\t\tif (config.netLocation) {\r\n\t\t\t\tdch_Config.netLocation = config.netLocation;\r\n\t\t\t}\r\n\r\n\t\t\tif (config._synchro) {\r\n\t\t\t\tdch_Config._synchro = config._synchro;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// · · · ^^^ · · ·  ^^^ · · ·  ^^^ · · · ^^^ · · ·  ^^^ · |/\\|···\r\n\r\n\r\n\t\tconsole.log('<*> ST NodesNetManager.addDataChannelToNode');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(' <·> Channel ID: ' + dch_Config._dchID);\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(' <·> Node ID:' + dch_Config._nodeID);\t// TODO REMOVE DEBUG LOG\r\n\r\n\r\n\t\ttry {\r\n\t\t\tlet dch = DataChannelsManager.get_DataChannel(dch_Config);\r\n\t\t\tnnetm.addDataChannel(dch);\r\n\t\t} catch (e) {\r\n\t\t\tthrow \"Cannot add Datachannel. \" + e.message;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Remove data channel from node\r\n\t */\r\n\tremoveDataChannelFromNode(node, dchID) {\r\n\t\tlet nnetm = this;\r\n\t\tnnetm.removeDataChannel(node.config.nodeID + '.' + dchID);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Get data channel of node\r\n\t */\r\n\tgetDataChannelOfNode(nodeID, dchID) {\r\n\t\tlet nnetm = this;\r\n\t\treturn nnetm.getDataChannelByID(nodeID + '.' + dchID);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns data channels searched by DataChannel.config._nodeID\r\n\t */\r\n\tgetDataChannelsOfNode(nodeID){\r\n\r\n\t\tlet nnetm = this;\r\n\r\n\t\tlet nodeDCHs = nnetm.channelsList.filter(function(dch, _i, _items) {\r\n\r\n\t\t\tif (dch.config._nodeID == nodeID) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\t\"numDataChannels\": nodeDCHs.length,\r\n\t\t\t\"dataChannels\": nodeDCHs\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Set options of data channel\r\n\t */\r\n\tsetOptionsOfDataChannel(dch, options) {\r\n\r\n\t\tlet nnetm = this;\r\n\r\n\t\tconsole.log('<*> ST NodesNetManager.setOptionsOfDataChannel');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(options);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\tnnetm.eventEmitter.emit(nnetm.CONSTANTS.Events.SetDCOptionsOnNode,\r\n\t\t\t\t{ \"node\" : dch.config._node,\r\n\t\t\t\t\t\"channelID\" : dch.config._dchID,\r\n\t\t\t\t\t\"options\" : options\r\n\t\t\t\t});\t// Emit event SetDCOptionsOnNode\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Create data channel from node\r\n\t *\r\n\t * Synchronization tasks\r\n\t */\r\n\t_createDCfromNode(nodeDCH, node) {\r\n\r\n\t\tlet nnetm = this;\r\n\r\n\t\tconsole.log('<*> ST NodesNetManager._createDCfromNode');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(nodeDCH);\t// TODO REMOVE DEBUG LOG\r\n\r\n\r\n\t\t// Create data channel from node\r\n\t\ttry {\r\n\t\t\tvar dchConfig = {\r\n\t\t\t\t\t\"mode\" : null,\r\n\t\t\t\t\t\"_synchro\" : true\r\n\t\t\t\t};\r\n\r\n\t\t\tswitch (nodeDCH.mode) {\r\n\t\t\t\tcase \"input\":\r\n\t\t\t\t\tdchConfig.mode = nnetm.CONSTANTS.Config.modeIN;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"output\":\r\n\t\t\t\t\tdchConfig.mode = nnetm.CONSTANTS.Config.modeOUT;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow \"Bad mode.\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tnnetm.addDataChannelToNode(node, nodeDCH.id, dchConfig);\r\n\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthrow \"Error adding channel. \" + e.message;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tconsole.log('<EEE> ST NodesNetManager._createDCfromNode');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e.message);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Delete data channel on server\r\n\t */\r\n\t_deleteDConServer(dch, node) {\r\n\t\t\r\n\t\tlet nnetm = this;\r\n\r\n\t\tconsole.log('<*> ST NodesNetManager._deleteDConServer');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(' <·> ' + dch.config.id);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\ttry {\r\n\t\t\tnnetm.removeDataChannelFromNode(node, dch.config._dchID);\r\n\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tconsole.log('<EEE> ST NodesNetManager._deleteDConServer');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e.message);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Delete data channel on node\r\n\t */\r\n\t_deleteDConNode(channelID, stNode) {\r\n\r\n\t\tlet nnetm = this;\r\n\t\tnnetm.eventEmitter.emit(nnetm.CONSTANTS.Events.DeleteDCOnNode, {\"node\": stNode, \"channelID\": channelID});\t// Emit event DeleteDCOnNode\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nmodule.exports = NodesNetManager;\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STServer\\es6"}